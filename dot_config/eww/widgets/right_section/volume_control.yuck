;; Volume Widget with Hover Expansion
;; First, define variables to control the widget state and volume

(defvar volume_reveal true)  ;; Controls whether the slider is visible

;; Define script to get current volume (using pactl or amixer)
(defpoll current_volume
  :interval "60s"
  :run-while false
  "pamixer --get-volume")

;; Define script to check mute status
(defpoll is_muted
  :interval "60s"
  :run-while false
  "pamixer --get-mute")

;; Function to update volume when slider is moved
(defvar volume_change "pamixer --set-volume {}")

;; Function to toggle mute
(defvar volume_toggle "pamixer --toggle-mute")

;; Helper function to choose the appropriate volume icon using Nerd Font
(defwidget volume_icon []
  (box
    :class "volume-icon"
    (label :text {
      is_muted == "true" ? "󰸈" :
      current_volume == 0 ? "󰸈" :
      current_volume < 30 ? "󰕿" :
      current_volume < 70 ? "󰖀" : "󰕾"
    })
  )
)

;; Main volume widget
(defwidget volume []
  (eventbox
    :onhover "${EWW_CMD} update volume_reveal=true"
    :onhoverlost "${EWW_CMD} update volume_reveal=false"
    (box
      :class "volume-module"
      :space-evenly false
      :orientation "h"
      :spacing "3"
      
      ;; Volume icon that's always visible
      (button
        :onclick "pamixer --toggle-mute && eww update is_muted=\"$(pamixer --get-mute)\""
        :class "volume-button"
        (volume_icon)
      )
      
      ;; Slider that appears on hover
      (revealer
        :transition "slideleft"
        :reveal volume_reveal
        :duration "250ms"
        (scale
          :class "volume-slider"
          :value current_volume
          :tooltip "${current_volume}%"
          :min 0
          :max 100
          :onchange "pamixer --set-volume {} && eww update volume_current=\"{}\""
        )
      )
    )
  )
)

